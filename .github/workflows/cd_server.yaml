name: Build and Release

on:
  push:
    tags:
      - "server/v*" # Triggers on tags like server/v1.2.3, etc.

jobs:
  release:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            binary_name: hydraide-linux-amd64
            asset_name: hydraide-linux-amd64

          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            binary_name: hydraide-linux-arm64
            asset_name: hydraide-linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: extract_version
        shell: bash
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -a -installsuffix cgo -o ${{ matrix.binary_name }} ./app/server

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hydraide-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ${{ matrix.binary_name }}

  create_release:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Move downloaded binaries to root for release
        run: |
          mv ./artifacts/hydraide-linux-amd64/hydraide-linux-amd64 .
          mv ./artifacts/hydraide-linux-arm64/hydraide-linux-arm64 .

      - name: Create GitHub release with assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.extract_version.outputs.version }}
          name: Release ${{ steps.extract_version.outputs.version }}
          artifacts: "hydraide-linux-amd64,hydraide-linux-arm64"
          generateReleaseNotes: true
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
